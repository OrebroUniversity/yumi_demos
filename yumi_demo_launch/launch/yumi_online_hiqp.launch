<?xml version="1.0"?>
<launch> 

<!-- Launches a hardware interface to an online yumi. Load hiqp controller -->

<arg name="name" default="yumi" doc="The robot name. Ensure this is the same name you give to the arm in the urdf instance."/>
<arg name="ip" default="192.168.125.1"/> <!--when talking to the real robot controller -->
<arg name="controllers" default="joint_state_controller hiqp_joint_velocity_controller"/>
<arg name="hardware_interface" default="VelocityJointInterface"/>

<!-- the urdf/sdf parameter -->
<param name="robot_description" command="$(find xacro)/xacro.py '$(find yumi_description)/urdf/yumi.urdf.xacro' prefix:=$(arg hardware_interface)" />

<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <remap from="/joint_states" to="/yumi/joint_states" />
</node>

<!-- Load the YAML file -->
<rosparam file="$(find hiqp_ros)/config/yumi.yaml" command="load"/>
<!-- Load preload configurations for YuMi and HiQP -->
<rosparam file="$(find hiqp_ros)/config/yumi_preload_ldyn.yaml" command="load"/>

<!-- load the controllers -->
<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="$(arg controllers)" ns="/yumi"/>

<!-- the real hardware interface /-->
<node required="true" name="yumi_hw" pkg="yumi_hw" type="yumi_hw_ifce_node" respawn="false" ns="/yumi" output="screen"> <!--launch-prefix="xterm -e gdb - -args"-->
    <!-- addresses /-->
    <param name="name" value="$(arg name)" />
    <!--param name="port" value="$(arg port)"/-->
    <param name="ip" value="$(arg ip)"/>
</node>
 
<node required="true" name="yumi_gripper" pkg="yumi_hw" type="yumi_gripper_node" respawn="false" ns="/yumi" output="screen"> <!--launch-prefix="xterm -e gdb - -args"-->
    <!-- addresses /-->
    <param name="ip" value="$(arg ip)"/>
</node>

  <!-- Run RViz for visualization instead of the Gazebo GUI -->
  <!--node name="rviz" pkg="rviz" type="rviz" args="-d $(find hiqp_controllers)/launch/yumi.rviz"/-->

</launch>

